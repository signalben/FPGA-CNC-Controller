library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity mux_latch is
    Port ( PX   : in std_logic_vector(19 downto 0);
	        PY   : in std_logic_vector(19 downto 0);
		     PZ   : in std_logic_vector(19 downto 0); 
           Sel  : in  std_logic_vector(7 downto 0);
			  Clk  : in  STD_LOGIC;
			  FBP  : out std_logic_vector(4 downto 0);

			  
end mux_latch;

architecture Behavioral of demux_latch is
	 signal SPX : std_logic_vector(19 downto 0);
	 signal SPY : std_logic_vector(19 downto 0);
	 signal SPZ : std_logic_vector(19 downto 0); 
	 
begin

    SPX <= PX when (Sel = "00000011") and (falling_edge(clk)) else SPX;
	 FBP <= SPX(19..15) when (Sel = "00000100") else FBP <= (others=>'0');
	 FBP <= SPX(14..10) when (Sel = "00000101") else FBP <= (others=>'0');
	 FBP <= SPX(9..5)   when (Sel = "00000110") else FBP <= (others=>'0');
	 FBP <= SPX(4..0)   when (Sel = "00000111") else FBP <= (others=>'0');
	 
    SPY <= PY when (Sel = "00000111") and (falling_edge(clk)) else SPY;
	 FBP <= SPY(19..15) when (Sel = "00001000") else FBP <= (others=>'0');
	 FBP <= SPY(14..10) when (Sel = "00001001") else FBP <= (others=>'0');
	 FBP <= SPY(9..5)   when (Sel = "00001010") else FBP <= (others=>'0');
	 FBP <= SPY(4..0)   when (Sel = "00001011") else FBP <= (others=>'0');
	 
	 SPZ <= PZ when (Sel = "00001011") and (falling_edge(clk)) else SPZ;
	 FBP <= SPZ(19..15) when (Sel = "00000100") else FBP <= (others=>'0');
	 FBP <= SPZ(14..10) when (Sel = "00000101") else FBP <= (others=>'0');
	 FBP <= SPZ(9..5)   when (Sel = "00000110") else FBP <= (others=>'0');
	 FBP <= SPZ(4..0)   when (Sel = "00000111") else FBP <= (others=>'0');
	 
	 
	 
	 
	 
	 
	 YD <= D when (Sel = "00000010") and (falling_edge(clk)) else YD;
    QY <= YD;
	 
	 ZD <= D when (Sel = "00000011") and (falling_edge(clk)) else ZD;
    QZ <= ZD;

end Behavioral; -- 19 18 17 16 15 - 14 13 12 11 10 - 9 8 7 6 5 - 4 3 2 1 0 